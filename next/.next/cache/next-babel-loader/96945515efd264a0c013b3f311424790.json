{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\Seventh Semester\\\\FYP\\\\MediQuick-Find-Medicines-Nearby\\\\next\\\\pages\\\\search.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from \"next/head\";\nimport { Container, Button, Radio, Form } from 'semantic-ui-react';\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"myChangeHandler\", function (event) {\n      // console.log(event);\n      var name = event.target.name;\n      var value = event.target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRadioButtonChangeHandler\", function (event, v) {\n      var _this$setState2;\n\n      // this.setState({name: event.target.value});\n      console.log(v);\n      var name = v.name;\n      var value = v.value;\n\n      _this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, name, value), _defineProperty(_this$setState2, \"url\", \"api/search/\".concat(value)), _this$setState2));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickHandler\", function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n\n      console.log(name + ': ' + event.target.value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (e) {\n      e.preventDefault();\n      console.log(\"Final Name Value: \" + _this.state.name);\n      console.log(\"Type: \" + _this.state.type);\n\n      var ref = _assertThisInitialized(_this);\n\n      fetch(\"api/\".concat(_this.state.type, \"/\").concat(_this.state.name, \"/search\")).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return ref.setState({\n          fetchedData: data\n        }, function () {\n          return console.log(_this.state.fetchedData);\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyUpHandler\", function (e) {\n      var s = _this.state;\n\n      var ref = _assertThisInitialized(_this);\n\n      if (s.timer != null) {\n        window.clearTimeout(s.timer);\n      }\n\n      s.timer = setTimeout(function () {\n        if (s.name.length >= s.minlength) {\n          // var req = new XMLHttpRequest();\n          // req.addEventListener(\"load\", function(){\n          // \ts.draw(JSON.parse(this.responseText));\n          // });\n          // req.open(\"GET\", s.url + \"?term=\" + s.name);\n          // req.send();\n          fetch(s.url + \"?term=\" + s.name).then(function (res) {\n            return res.json();\n          }).then(function (data) {\n            return ref.setState({\n              list: data\n            });\n          });\n        } // else{\n        // \ts.box.innerHTML='';\n        // }\n\n      }, s.delay);\n    });\n\n    _this.state = {\n      name: '',\n      type: 'brand',\n      delay: 500,\n      minlength: 2,\n      timer: null,\n      url: 'api/search/brand',\n      list: [],\n      fetchedData: []\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      // let searchAutocomplete = new Suggest ;\n      // searchAutocomplete.autoComplete(\"searchDrug\",\"drugNameSuggestions\",\"api/search/brand\");\n      var options = [];\n\n      if (this.state.list.length !== 0 && this.state.type == 'brand') {\n        options = this.state.list.map(function (item) {\n          return __jsx(\"option\", {\n            key: item.b_id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, item.b_name);\n        });\n      } else if (this.state.list.length !== 0 && this.state.type == 'generic') {\n        options = this.state.list.map(function (item) {\n          return __jsx(\"option\", {\n            key: item.g_id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, item.g_name);\n        });\n      }\n\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Initial\"), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.11/semantic.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        style: {\n          paddingTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Search Medicine\"), __jsx(\"input\", {\n        id: \"searchDrug\",\n        name: \"name\",\n        placeholder: \"First Name\",\n        list: \"drugNameSuggestions\",\n        autoComplete: \"off\",\n        onChange: this.myChangeHandler,\n        onKeyUp: this.onKeyUpHandler,\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), __jsx(\"datalist\", {\n        id: \"drugNameSuggestions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, options)), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Search By\"), __jsx(Radio, {\n        label: \"Brand Name\",\n        name: \"type\",\n        value: \"brand\",\n        checked: this.state.type === 'brand',\n        onChange: this.onRadioButtonChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __jsx(Radio, {\n        label: \"Generic\",\n        name: \"type\",\n        value: \"generic\",\n        checked: this.state.type === 'generic',\n        onChange: this.onRadioButtonChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), __jsx(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport default Search;","map":{"version":3,"sources":["D:/Seventh Semester/FYP/MediQuick-Find-Medicines-Nearby/next/pages/search.js"],"names":["React","Head","Container","Button","Radio","Form","Search","props","event","name","target","value","setState","v","console","log","e","preventDefault","state","type","ref","fetch","then","res","json","data","fetchedData","s","timer","window","clearTimeout","setTimeout","length","minlength","url","list","delay","options","map","item","b_id","b_name","g_id","g_name","onSubmit","paddingTop","myChangeHandler","onKeyUpHandler","onRadioButtonChangeHandler","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Head from \"next/head\";\r\nimport { Container, Button, Radio, Form } from 'semantic-ui-react';\r\n\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            type: 'brand',\r\n            delay: 500,\r\n\t\t    minlength: 2,\r\n            timer: null,\r\n            url: 'api/search/brand',\r\n            list: [],\r\n            fetchedData: []\r\n        };\r\n    }\r\n\r\n    myChangeHandler = (event) => {\r\n        // console.log(event);\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    onRadioButtonChangeHandler = (event, v) => {\r\n        // this.setState({name: event.target.value});\r\n        console.log(v);\r\n        let name = v.name;\r\n        let value = v.value;\r\n        this.setState({[name]: value, url: `api/search/${value}`});\r\n    }\r\n\r\n    onClickHandler = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({[name]: value});\r\n        console.log(name + ': ' + event.target.value);\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Final Name Value: \" + this.state.name);\r\n        console.log(\"Type: \" + this.state.type);\r\n        let ref = this;\r\n        \r\n        fetch(`api/${this.state.type}/${this.state.name}/search`)\r\n            .then(res => res.json())\r\n            .then(data => ref.setState({fetchedData: data}, ()=>(console.log(this.state.fetchedData))));\r\n        \r\n    }\r\n\r\n    onKeyUpHandler = (e) => {\r\n        let s = this.state;\r\n        let ref = this;\r\n        if (s.timer!=null) { window.clearTimeout(s.timer); }\r\n\t\t\ts.timer = setTimeout(function(){\r\n\t\t\t\t\r\n\t\t\t\tif (s.name.length >= s.minlength) {\r\n\t\t\t\t\t// var req = new XMLHttpRequest();\r\n\t\t\t\t\t// req.addEventListener(\"load\", function(){\r\n\t\t\t\t\t// \ts.draw(JSON.parse(this.responseText));\r\n\t\t\t\t\t// });\r\n\t\t\t\t\t// req.open(\"GET\", s.url + \"?term=\" + s.name);\r\n                    // req.send();\r\n\r\n                    \r\n                    \r\n                    fetch(s.url+\"?term=\" + s.name)\r\n                        .then(res => res.json())\r\n                        .then(data => ref.setState({list: data}));\r\n\t\t\t\t}\r\n\t\t\t\t// else{\r\n\t\t\t\t// \ts.box.innerHTML='';\r\n\t\t\t\t// }\r\n\r\n\t\t\t}, s.delay);\r\n    }\r\n\r\n    render () {\r\n        // let searchAutocomplete = new Suggest ;\r\n        // searchAutocomplete.autoComplete(\"searchDrug\",\"drugNameSuggestions\",\"api/search/brand\");\r\n        let options = [];\r\n        if(this.state.list.length!==0 && this.state.type == 'brand'){\r\n            options = this.state.list.map((item)=>{\r\n            return <option key={item.b_id}>{item.b_name}</option>\r\n            });\r\n        }\r\n        else if(this.state.list.length!==0 && this.state.type == 'generic'){\r\n            options = this.state.list.map((item)=>{\r\n            return <option key={item.g_id}>{item.g_name}</option>\r\n            });\r\n        }\r\n        return (\r\n            <Container>\r\n                <Head>\r\n                    <title>Initial</title>\r\n                    <link\r\n                        rel=\"stylesheet\"\r\n                        href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.11/semantic.min.css\"\r\n                    />\r\n                </Head>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Field>\r\n                        <h3 style = {{paddingTop: 30}}>Search Medicine</h3>\r\n                        <input\r\n                            id=\"searchDrug\"\r\n                            name= \"name\"\r\n                            placeholder='First Name'\r\n                            list=\"drugNameSuggestions\"\r\n                            autoComplete=\"off\"\r\n                            onChange={this.myChangeHandler}\r\n                            onKeyUp={this.onKeyUpHandler}\r\n                            value={this.state.name}\r\n                        />\r\n                        <datalist id=\"drugNameSuggestions\">\r\n                            {/* <option>paracetamol</option> */}\r\n                            {\r\n                                options\r\n                            }\r\n\r\n\r\n                        </datalist>\r\n                    </Form.Field>\r\n                    \r\n                    <Form.Field>\r\n                        <label>Search By</label>\r\n                        <Radio\r\n                            label='Brand Name'\r\n                            name='type'\r\n                            value='brand'\r\n                            checked={this.state.type === 'brand'}\r\n                            onChange={this.onRadioButtonChangeHandler}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Radio\r\n                            label='Generic'\r\n                            name='type'\r\n                            value='generic'\r\n                            checked={this.state.type === 'generic'}\r\n                            onChange={this.onRadioButtonChangeHandler}\r\n\r\n                        />\r\n                    </Form.Field>\r\n                    <Button type='submit'>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Search ;"]},"metadata":{},"sourceType":"module"}