{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Seventh Semester\\\\FYP\\\\MediQuick-Find-Medicines-Nearby\\\\next\\\\pages\\\\src\\\\components\\\\dashboard\\\\Visitorstats\\\\BasicMap.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from 'react-simple-maps';\nimport { scaleLinear } from 'd3-scale';\nimport request from 'axios';\nvar cityScale = scaleLinear().domain([0, 37843000]).range([1, 25]);\n\nvar BasicMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BasicMap, _Component);\n\n  function BasicMap() {\n    var _this;\n\n    _classCallCheck(this, BasicMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BasicMap).call(this));\n    _this.state = {\n      cities: []\n    };\n    _this.fetchCities = _this.fetchCities.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BasicMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchCities();\n    }\n  }, {\n    key: \"fetchCities\",\n    value: function fetchCities() {\n      var _this2 = this;\n\n      request.get('../../static/world-most-populous-cities.json').then(function (res) {\n        _this2.setState({\n          cities: res.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"wrapperStyles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, __jsx(ComposableMap, {\n        projectionConfig: {\n          scale: 205\n        },\n        width: 980,\n        height: 440,\n        style: {\n          width: '100%',\n          height: '235px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(ZoomableGroup, {\n        center: [0, 20],\n        disablePanning: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, __jsx(Geographies, {\n        geography: \"../../static/world-50m.json\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, function (geographies, projection) {\n        return geographies.map(function (geography, i) {\n          return geography.id !== 'ATA' && __jsx(Geography, {\n            key: i,\n            geography: geography,\n            projection: projection,\n            style: {\n              \"default\": {\n                fill: '#aaa',\n                stroke: '#fff',\n                strokeWidth: 0.75,\n                outline: 'none'\n              },\n              hover: {\n                fill: '#ECEFF1',\n                stroke: '#607D8B',\n                strokeWidth: 0.75,\n                outline: 'none'\n              },\n              pressed: {\n                fill: '#ECEFF1',\n                stroke: '#607D8B',\n                strokeWidth: 0.75,\n                outline: 'none'\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n        });\n      }), __jsx(Markers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.state.cities.map(function (city, i) {\n        return __jsx(Marker, {\n          key: i,\n          marker: city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, __jsx(\"circle\", {\n          cx: 0,\n          cy: 0,\n          r: cityScale(city.population),\n          fill: \"rgba(255,87,34,0.8)\",\n          strokeWidth: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }));\n      })))));\n    }\n  }]);\n\n  return BasicMap;\n}(Component);\n\nexport default BasicMap;","map":{"version":3,"sources":["D:/Seventh Semester/FYP/MediQuick-Find-Medicines-Nearby/next/pages/src/components/dashboard/Visitorstats/BasicMap.js"],"names":["React","Component","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","scaleLinear","request","cityScale","domain","range","BasicMap","state","cities","fetchCities","bind","get","then","res","setState","data","scale","width","height","geographies","projection","map","geography","i","id","fill","stroke","strokeWidth","outline","hover","pressed","city","population"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Markers,\n  Marker,\n} from 'react-simple-maps';\nimport {scaleLinear} from 'd3-scale';\nimport request from 'axios';\n\nconst cityScale = scaleLinear ().domain ([0, 37843000]).range ([1, 25]);\n\nclass BasicMap extends Component {\n  constructor () {\n    super ();\n    this.state = {\n      cities: [],\n    };\n    this.fetchCities = this.fetchCities.bind (this);\n  }\n  componentDidMount () {\n    this.fetchCities ();\n  }\n  fetchCities () {\n    request.get ('../../static/world-most-populous-cities.json').then (res => {\n      this.setState ({\n        cities: res.data,\n      });\n    });\n  }\n  render () {\n    return (\n      <div className=\"wrapperStyles\">\n        <ComposableMap\n          projectionConfig={{scale: 205}}\n          width={980}\n          height={440}\n          style={{\n            width: '100%',\n            height: '235px',\n          }}\n        >\n          <ZoomableGroup center={[0, 20]} disablePanning>\n            <Geographies geography=\"../../static/world-50m.json\">\n              {(geographies, projection) =>\n                geographies.map (\n                  (geography, i) =>\n                    geography.id !== 'ATA' &&\n                    <Geography\n                      key={i}\n                      geography={geography}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: '#aaa',\n                          stroke: '#fff',\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        hover: {\n                          fill: '#ECEFF1',\n                          stroke: '#607D8B',\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        pressed: {\n                          fill: '#ECEFF1',\n                          stroke: '#607D8B',\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                      }}\n                    />\n                )}\n            </Geographies>\n            <Markers>\n              {this.state.cities.map ((city, i) => (\n                <Marker key={i} marker={city}>\n                  <circle\n                    cx={0}\n                    cy={0}\n                    r={cityScale (city.population)}\n                    fill=\"rgba(255,87,34,0.8)\"\n                    strokeWidth=\"1\"\n                  />\n                </Marker>\n              ))}\n            </Markers>\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    );\n  }\n}\n\nexport default BasicMap;\n"]},"metadata":{},"sourceType":"module"}