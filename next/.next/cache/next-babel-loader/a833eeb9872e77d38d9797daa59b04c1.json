{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/usr/src/app/router/withPageRouter.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\n/**\r\n * Our router to override the missing query when deploying to static export\r\n * This is required for page components that need access to the router\r\n *\r\n * @param {React.Component} Component\r\n *\r\n * @return {React.Component}\r\n */\n\nexport var withPageRouter = function withPageRouter(Component) {\n  return withRouter(function (_ref) {\n    var router = _ref.router,\n        props = _objectWithoutProperties(_ref, [\"router\"]);\n\n    // split at first `?`\n    var searchParams = new URLSearchParams(router.asPath.split(/\\?/)[1]);\n    var query = {};\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(searchParams), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            key = _step$value[0],\n            value = _step$value[1];\n\n        query[key] = value;\n      } // replace the empty query\n\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    router.query = query;\n    return __jsx(Component, _extends({}, props, {\n      router: router,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  });\n};","map":{"version":3,"sources":["/usr/src/app/router/withPageRouter.js"],"names":["withRouter","withPageRouter","Component","router","props","searchParams","URLSearchParams","asPath","split","query","key","value"],"mappings":";;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AAEA;;;;;;;;;AAQA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAe;AACzC,SAAOF,UAAU,CAAC,gBAA0B;AAAA,QAAvBG,MAAuB,QAAvBA,MAAuB;AAAA,QAAZC,KAAY;;AACxC;AACA,QAAMC,YAAY,GAAG,IAAIC,eAAJ,CAAoBH,MAAM,CAACI,MAAP,CAAcC,KAAd,CAAoB,IAApB,EAA0B,CAA1B,CAApB,CAArB;AAEA,QAAMC,KAAK,GAAG,EAAd;AAJwC;AAAA;AAAA;;AAAA;AAKxC,wCAA2BJ,YAA3B,4GAAyC;AAAA;AAAA,YAA7BK,GAA6B;AAAA,YAAxBC,KAAwB;;AACrCF,QAAAA,KAAK,CAACC,GAAD,CAAL,GAAaC,KAAb;AACH,OAPuC,CASxC;;AATwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUxCR,IAAAA,MAAM,CAACM,KAAP,GAAeA,KAAf;AAEA,WAAQ,MAAC,SAAD,eAAeL,KAAf;AAAsB,MAAA,MAAM,EAAED,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;AACH,GAbgB,CAAjB;AAcH,CAfM","sourcesContent":["import { withRouter } from 'next/router';\r\n\r\n/**\r\n * Our router to override the missing query when deploying to static export\r\n * This is required for page components that need access to the router\r\n *\r\n * @param {React.Component} Component\r\n *\r\n * @return {React.Component}\r\n */\r\nexport const withPageRouter = (Component) => {\r\n    return withRouter(({ router, ...props }) => {\r\n        // split at first `?`\r\n        const searchParams = new URLSearchParams(router.asPath.split(/\\?/)[1]);\r\n\r\n        const query = {};\r\n        for (const [key, value] of searchParams) {\r\n            query[key] = value;\r\n        }\r\n\r\n        // replace the empty query\r\n        router.query = query;\r\n\r\n        return (<Component {...props} router={router} />);\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}