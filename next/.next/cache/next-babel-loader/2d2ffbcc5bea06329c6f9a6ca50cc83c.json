{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/components/LocationComponents/AlternateMedicines.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//Displaying the list of alternate medicines on the location page\nimport react from 'react';\nimport Link from 'next/link';\nimport { List } from 'semantic-ui-react';\n\nclass AlternateMedicines extends react.Component {\n  render() {\n    const {\n      alternateMedicines\n    } = this.props;\n    const list = alternateMedicines.map(medicine => {\n      return __jsx(Link, {\n        key: medicine.id,\n        href: `location?id=${medicine.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, __jsx(List.Icon, {\n        name: \"plus circle\",\n        size: \"large\",\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), __jsx(List.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, medicine.name), __jsx(List.Description, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, medicine.manufacturer))));\n    });\n    return __jsx(List, {\n      divided: true,\n      relaxed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Alternate Medicines\"), list);\n  }\n\n}\n\nexport default AlternateMedicines;","map":{"version":3,"sources":["/usr/src/app/components/LocationComponents/AlternateMedicines.js"],"names":["react","Link","List","AlternateMedicines","Component","render","alternateMedicines","props","list","map","medicine","id","name","manufacturer"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,kBAAN,SAAiCH,KAAK,CAACI,SAAvC,CAAgD;AAE5CC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAuB,KAAKC,KAAlC;AACA,UAAMC,IAAI,GAAGF,kBAAkB,CAACG,GAAnB,CAAwBC,QAAD,IAAa;AAC7C,aACI,MAAC,IAAD;AAAM,QAAA,GAAG,EAAIA,QAAQ,CAACC,EAAtB;AAA0B,QAAA,IAAI,EAAK,eAAcD,QAAQ,CAACC,EAAG,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,aAAhB;AAA8B,QAAA,IAAI,EAAC,OAAnC;AAA2C,QAAA,aAAa,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBD,QAAQ,CAACE,IAA9B,CADJ,EAEI,MAAC,IAAD,CAAM,WAAN;AAAkB,QAAA,EAAE,EAAC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BF,QAAQ,CAACG,YAAnC,CAFJ,CAFJ,CADJ,CADJ;AAWH,KAZY,CAAb;AAcA,WACI,MAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAc,MAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEKL,IAFL,CADJ;AAMH;;AAxB2C;;AA2BhD,eAAeL,kBAAf","sourcesContent":["//Displaying the list of alternate medicines on the location page\r\nimport react from 'react';\r\nimport Link from 'next/link';\r\nimport { List } from 'semantic-ui-react';\r\n\r\nclass AlternateMedicines extends react.Component{\r\n\r\n    render (){\r\n        const {alternateMedicines} = this.props;\r\n        const list = alternateMedicines.map((medicine)=> {\r\n            return(\r\n                <Link key = {medicine.id} href = {`location?id=${medicine.id}`}>\r\n                    <List.Item>\r\n                        <List.Icon name='plus circle' size='large' verticalAlign='middle' />\r\n                        <List.Content>\r\n                            <List.Header as='a'>{medicine.name}</List.Header>\r\n                            <List.Description as='a'>{medicine.manufacturer}</List.Description>\r\n                        </List.Content>\r\n                    </List.Item>\r\n                </Link>\r\n            );\r\n        })\r\n\r\n        return(\r\n            <List divided relaxed>\r\n                <h1>Alternate Medicines</h1>\r\n                {list}\r\n            </List>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AlternateMedicines;"]},"metadata":{},"sourceType":"module"}