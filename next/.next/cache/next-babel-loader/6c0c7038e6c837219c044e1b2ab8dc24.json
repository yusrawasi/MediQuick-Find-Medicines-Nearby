{"ast":null,"code":"var _jsxFileName = \"D:\\\\Seventh Semester\\\\FYP\\\\MediQuick-Find-Medicines-Nearby\\\\next\\\\pages\\\\admin\\\\medicine.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport axios from 'axios';\nimport SelectSearch from 'react-select-search';\nimport \"../../css/style.css\";\n\nconst $ = require('jquery');\n\n$.DataTable = require('datatables.net');\n\nclass Medicine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      brand: '',\n      dosage: '',\n      manufacturer: '',\n      packaging: '',\n      price: 0,\n      sku_productCode: 'MEDXXX',\n      brands: [],\n      dosageForms: [],\n      manufacturers: [],\n      generics: [],\n      genericsSelected: [{\n        id: 1,\n        name: \"\",\n        value: \"\",\n        strength: \"\"\n      }],\n      medicines: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(`../api/manufacturer`).then(response => {\n      this.setState({\n        manufacturers: response.data.map(item => ({\n          id: item.m_id,\n          name: item.m_name,\n          value: item.m_name\n        })),\n        manufacturer: response.data[0].m_name\n      });\n    });\n    axios.get(`../api/brand`).then(response => {\n      this.setState({\n        brands: response.data.map(item => ({\n          id: item.b_id,\n          name: item.b_name,\n          value: item.b_name\n        })),\n        brand: response.data[0].b_name\n      });\n    });\n    axios.get(`../api/dosage`).then(response => {\n      this.setState({\n        dosageForms: response.data.map(item => ({\n          id: item.d_id,\n          name: item.d_name,\n          value: item.d_name\n        })),\n        dosage: response.data[0].d_name\n      });\n    });\n    axios.get(`../api/generic`).then(response => {\n      const element = response.data[0];\n      this.setState({\n        generics: response.data.map(item => ({\n          id: item.g_id,\n          name: item.g_name,\n          value: item.g_name\n        })),\n        genericsSelected: [{\n          id: element.g_id,\n          name: element.g_name,\n          value: element.g_name,\n          strength: ''\n        }]\n      });\n    });\n    axios.get('../api/medicine').then(response => {\n      this.setState({\n        medicines: response.data\n      });\n      console.log(response);\n      this.$el = $(this.el);\n      this.$el.DataTable({\n        data: this.state.medicines,\n        \"columnDefs\": [{// The `data` parameter refers to the data for the cell (defined by the\n          // `data` option, which defaults to the column being worked with, in\n          // this case `data: 0`.\n          // \"render\": function ( data, type, row ) {\n          //     var html = $.parseHTML(data);\n          //     console.log(html);\n          //     return html[0].data;\n          // },\n          // \"targets\": [1]\n        }, // { \"visible\": true,  \"targets\": [ 3 ] }\n        {// The `data` parameter refers to the data for the cell (defined by the\n          // `data` option, which defaults to the column being worked with, in\n          // this case `data: 0`.\n          // \"render\": function ( data, type, row ) {\n          //     var html = $.parseHTML(data);\n          //     console.log(html);\n          //     return html[0].data;\n          // },\n          // \"targets\": [2]\n        }],\n        columns: [{\n          title: \"ID\",\n          data: 'med_id'\n        }, {\n          title: \"Name\",\n          data: 'brand_name'\n        }, {\n          title: \"Dosage Form\",\n          data: 'dosage_name'\n        }, {\n          title: \"Manufacturer\",\n          data: 'manufacturer_name'\n        }, {\n          mRender: function (data, type, row) {\n            const drugs = row['generics'];\n            let drugList = drugs.map(drug => {\n              return '<span>' + drug.drugname + ': ' + drug.strength + '</span>';\n            });\n            return '<p>' + drugList + '</p>';\n          }\n        }, {\n          title: \"Packaging\",\n          data: 'packaging'\n        }, {\n          mRender: function (data, type, row) {\n            return '<a href=\"#\" class=\"table-edit\" data-id=\"' + row[0] + '\">EDIT</a>';\n          }\n        }]\n      });\n    });\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = {\n      b_id: this.state.brand.id,\n      m_id: this.state.manufacturer.id,\n      d_id: this.state.dosage.id,\n      packaging: this.state.packaging,\n      med_generics: this.state.genericsSelected,\n      strips_per_packet: '0',\n      sku_productCode: this.state.sku_productCode,\n      price: this.state.price\n    };\n    console.log(data);\n    axios.post('../api/medicine', data).then(res => console.log(res));\n  }\n\n  addClick() {\n    this.setState(prevState => ({\n      genericsSelected: [...prevState.genericsSelected, {\n        id: 1,\n        name: \"\",\n        strength: \"\",\n        value: \"\"\n      }]\n    }));\n  }\n\n  removeClick(i) {\n    let values = [...this.state.genericsSelected];\n    values.splice(i, 1);\n    this.setState({\n      genericsSelected: values\n    });\n  }\n\n  createUI() {\n    return this.state.genericsSelected.map((el, i) => __jsx(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, __jsx(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, __jsx(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, __jsx(SelectSearch, {\n      options: this.state.generics,\n      value: el.name,\n      onChange: (values, state, props) => {\n        this.handleGenericChangeSelectReact.bind(this, i, values, props)();\n      },\n      name: \"name\",\n      placeholder: \"Drug Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), __jsx(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, __jsx(Form.Control, {\n      style: {\n        height: '75%'\n      },\n      name: \"strength\",\n      type: \"text\",\n      value: el.strength,\n      onChange: this.handleGenericChange.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })), __jsx(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, __jsx(Button, {\n      variant: \"danger\",\n      style: {\n        height: '75%'\n      },\n      onClick: this.removeClick.bind(this, i),\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Remove\")))));\n  }\n\n  handleGenericChange(i, event) {\n    let values = [...this.state.genericsSelected];\n    values[i][event.target.name] = event.target.value;\n    this.setState({\n      genericsSelected: values\n    });\n  }\n\n  handleGenericChangeSelectReact(i, values, props) {\n    let data = [...this.state.genericsSelected];\n    data[i][props.name] = values.name;\n    data[i]['value'] = values.name;\n    data[i]['id'] = values.id;\n    this.setState({\n      genericsSelected: data\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n      integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n      crossOrigin: \"anonymous\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, __jsx(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, __jsx(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, __jsx(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, __jsx(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, __jsx(Form.Group, {\n      controlId: \"manufacturer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Manufacturer\"), __jsx(SelectSearch, {\n      options: this.state.manufacturers,\n      value: this.state.manufacturer.name,\n      onChange: (values, state, props) => {\n        this.setState({\n          [props.name]: {\n            id: values.id,\n            name: values.name\n          }\n        });\n      },\n      name: \"manufacturer\",\n      placeholder: \"Manufacturer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }))), __jsx(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, __jsx(Form.Group, {\n      controlId: \"brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Brand\"), __jsx(SelectSearch, {\n      options: this.state.brands,\n      value: this.state.brand.name,\n      onChange: (values, state, props) => {\n        this.setState({\n          [props.name]: {\n            id: values.id,\n            name: values.name\n          }\n        });\n      },\n      name: \"brand\",\n      placeholder: \"Brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }))), __jsx(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, __jsx(Form.Group, {\n      controlId: \"dosageForm\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Dosage Form\"), __jsx(SelectSearch, {\n      options: this.state.dosageForms,\n      value: this.state.dosage.name,\n      onChange: (values, state, props) => {\n        this.setState({\n          [props.name]: {\n            id: values.id,\n            name: values.name\n          }\n        });\n      },\n      name: \"dosage\",\n      placeholder: \"Dosage Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }))), __jsx(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, __jsx(Form.Group, {\n      controlId: \"packaging\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Packaging\"), __jsx(Form.Control, {\n      style: {\n        height: '75%'\n      },\n      name: \"packaging\",\n      type: \"text\",\n      value: this.state.packaging,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }))), __jsx(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, __jsx(Form.Group, {\n      controlId: \"price\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Price\"), __jsx(Form.Control, {\n      style: {\n        height: '75%'\n      },\n      name: \"price\",\n      type: \"number\",\n      value: this.state.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }))), __jsx(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, __jsx(Form.Group, {\n      controlId: \"sku_productCode\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Product Code\"), __jsx(Form.Control, {\n      style: {\n        height: '75%'\n      },\n      name: \"sku_productCode\",\n      type: \"text\",\n      value: this.state.sku_productCode,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })))), __jsx(Form.Group, {\n      controlId: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, __jsx(Form.Check, {\n      type: \"checkbox\",\n      label: \"Active\",\n      \"data-toggle\": \"toggle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    })), __jsx(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Drugs\"), this.createUI()), __jsx(Button, {\n      variant: \"success\",\n      value: \"Add More\",\n      onClick: this.addClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Add More\"), __jsx(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Submit\"))))))), __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, __jsx(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, __jsx(Card, {\n      style: {\n        padding: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, __jsx(\"table\", {\n      id: \"brandDataTable\",\n      className: \"display\",\n      width: \"100%\",\n      ref: el => this.el = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Medicine;","map":{"version":3,"sources":["D:/Seventh Semester/FYP/MediQuick-Find-Medicines-Nearby/next/pages/admin/medicine.js"],"names":["React","Component","Container","Row","Col","Card","Form","Button","axios","SelectSearch","$","require","DataTable","Medicine","constructor","props","state","id","brand","dosage","manufacturer","packaging","price","sku_productCode","brands","dosageForms","manufacturers","generics","genericsSelected","name","value","strength","medicines","handleChange","bind","handleSubmit","componentDidMount","get","then","response","setState","data","map","item","m_id","m_name","b_id","b_name","d_id","d_name","element","g_id","g_name","console","log","$el","el","columns","title","mRender","type","row","drugs","drugList","drug","drugname","e","target","checked","preventDefault","med_generics","strips_per_packet","post","res","addClick","prevState","removeClick","i","values","splice","createUI","handleGenericChangeSelectReact","height","handleGenericChange","event","render","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport SelectSearch from 'react-select-search';\r\nimport \"../../css/style.css\";\r\n\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nclass Medicine extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      id: 0,\r\n      brand: '',\r\n      dosage: '',\r\n      manufacturer: '',\r\n      packaging: '',\r\n      price: 0,\r\n      sku_productCode: 'MEDXXX',\r\n\r\n      brands: [],\r\n      dosageForms: [],\r\n      manufacturers: [],\r\n      generics: [],\r\n\r\n      genericsSelected: [{id: 1, name: \"\", value:\"\", strength: \"\"}],\r\n\r\n      medicines: []\r\n\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    axios.get(`../api/manufacturer`).then(response => {\r\n      this.setState({\r\n          manufacturers: response.data.map((item)=>({id: item.m_id, name: item.m_name, value: item.m_name})),\r\n          manufacturer: response.data[0].m_name\r\n      });\r\n  });\r\n\r\n    axios.get(`../api/brand`).then(response => {\r\n        this.setState({\r\n            brands: response.data.map((item)=>({id: item.b_id, name: item.b_name, value: item.b_name})),\r\n            brand: response.data[0].b_name\r\n        });\r\n    });\r\n\r\n    axios.get(`../api/dosage`).then(response => {\r\n        this.setState({\r\n            dosageForms: response.data.map((item)=>({id: item.d_id, name: item.d_name, value: item.d_name})),\r\n            dosage: response.data[0].d_name\r\n        });\r\n    });\r\n\r\n    axios.get(`../api/generic`).then(response => {\r\n        const element = response.data[0];\r\n        this.setState({\r\n            generics: response.data.map((item)=>({id: item.g_id, name: item.g_name, value: item.g_name})),\r\n            genericsSelected: [{id: element.g_id, name: element.g_name, value: element.g_name, strength: ''}]\r\n        });\r\n    });\r\n\r\n    axios.get('../api/medicine').then(response => {\r\n      this.setState({\r\n        medicines: response.data\r\n      });\r\n      console.log(response);\r\n      this.$el = $(this.el);\r\n    this.$el.DataTable(\r\n      {\r\n        data: this.state.medicines,\r\n        \"columnDefs\": [\r\n          {\r\n              // The `data` parameter refers to the data for the cell (defined by the\r\n              // `data` option, which defaults to the column being worked with, in\r\n              // this case `data: 0`.\r\n              // \"render\": function ( data, type, row ) {\r\n              //     var html = $.parseHTML(data);\r\n              //     console.log(html);\r\n              //     return html[0].data;\r\n              // },\r\n              // \"targets\": [1]\r\n          },\r\n          // { \"visible\": true,  \"targets\": [ 3 ] }\r\n          {\r\n            // The `data` parameter refers to the data for the cell (defined by the\r\n            // `data` option, which defaults to the column being worked with, in\r\n            // this case `data: 0`.\r\n            // \"render\": function ( data, type, row ) {\r\n            //     var html = $.parseHTML(data);\r\n            //     console.log(html);\r\n            //     return html[0].data;\r\n            // },\r\n            // \"targets\": [2]\r\n        }\r\n      ],\r\n        columns: [\r\n            { title: \"ID\", data: 'med_id' },\r\n            { title: \"Name\", data: 'brand_name' },\r\n            { title: \"Dosage Form\", data: 'dosage_name' },\r\n            { title: \"Manufacturer\", data: 'manufacturer_name' },\r\n\r\n            {\r\n              mRender: function (data, type, row) {\r\n                const drugs = row['generics'];\r\n                let drugList = drugs.map((drug)=>{\r\n                  return '<span>'+ drug.drugname +': ' + drug.strength + '</span>';\r\n                });\r\n                  return '<p>' + drugList + '</p>';\r\n              }\r\n            },\r\n            { title: \"Packaging\", data: 'packaging' },\r\n            {\r\n              mRender: function (data, type, row) {\r\n                  return '<a href=\"#\" class=\"table-edit\" data-id=\"' + row[0] + '\">EDIT</a>'\r\n              }\r\n            }\r\n           \r\n        ]\r\n    }\r\n    )\r\n    });\r\n    \r\n  }\r\n\r\n  handleChange(e){\r\n      const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name \r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n  }\r\n\r\n\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      b_id: this.state.brand.id,\r\n      m_id: this.state.manufacturer.id,\r\n      d_id: this.state.dosage.id,\r\n      packaging: this.state.packaging,\r\n      med_generics: this.state.genericsSelected,\r\n      strips_per_packet: '0',\r\n      sku_productCode: this.state.sku_productCode,\r\n      price: this.state.price\r\n    }\r\n\r\n    console.log(data);\r\n\r\n    axios.post('../api/medicine', data)\r\n    .then(res => console.log(res));\r\n  }\r\n\r\n  addClick(){\r\n    this.setState(prevState => ({ genericsSelected: [...prevState.genericsSelected, {id: 1, name: \"\", strength: \"\", value: \"\"}]}))\r\n  }\r\n  \r\n  removeClick(i){\r\n     let values = [...this.state.genericsSelected];\r\n     values.splice(i,1);\r\n     this.setState({ genericsSelected: values });\r\n  }\r\n\r\n  createUI(){\r\n    return this.state.genericsSelected.map((el, i) => \r\n        \r\n        <div key={i}>\r\n         {/* <input name=\"g_name\" type=\"text\" value={el.g_name||''} onChange={this.handleGenericChange.bind(this, i)} />\r\n         <input name=\"strength\" type=\"text\" value={el.strength||''} onChange={this.handleGenericChange.bind(this, i)} />\r\n         <input type='button' value='remove' onClick={this.removeClick.bind(this, i)}/> */}\r\n\r\n          <Form.Row>\r\n            \r\n            <Col md={6}>\r\n              {/* <Form.Control name=\"g_name\" as=\"select\" value={el.name} onChange={this.handleGenericChange.bind(this, i)}>\r\n                {\r\n                  this.state.generics.map( cat => {\r\n                    return <option key={cat.g_id} value={cat.g_name}>{cat.g_name}</option>\r\n                  })\r\n                }\r\n              </Form.Control>\r\n              <SelectSearch options={this.state.generics} value={el.name} \r\n                name=\"generic\" placeholder=\"Drug Name\" \r\n              /> */}\r\n              <SelectSearch options={this.state.generics} value={el.name} \r\n                onChange={(values, state, props) => {this.handleGenericChangeSelectReact.bind(this, i, values, props)()}} \r\n                name=\"name\" placeholder=\"Drug Name\" \r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Control style={{height: '75%'}} name=\"strength\" type=\"text\" value={el.strength} onChange={this.handleGenericChange.bind(this, i)}/>\r\n            </Col>\r\n            <Col md={2}>\r\n              <Button variant=\"danger\" style={{height: '75%'}} onClick={this.removeClick.bind(this, i)} block>Remove</Button>\r\n            </Col>\r\n          </Form.Row>\r\n        </div>          \r\n    )\r\n  }\r\n\r\n  handleGenericChange(i, event) {\r\n    let values = [...this.state.genericsSelected];\r\n    values[i][event.target.name] = event.target.value;\r\n    this.setState({ genericsSelected: values });\r\n  }\r\n\r\n  handleGenericChangeSelectReact(i, values, props) {\r\n    let data = [...this.state.genericsSelected];\r\n    data[i][props.name] = values.name;\r\n    data[i]['value'] = values.name;\r\n    data[i]['id'] = values.id;\r\n    this.setState({ genericsSelected: data });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css\"></link>\r\n\r\n        <Container>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card>\r\n                <Card.Body>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <Row>\r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"manufacturer\">\r\n                        <Form.Label>Manufacturer</Form.Label>\r\n                        {/* <Form.Control name=\"manufacturer\" as=\"select\" onChange={this.handleChange}>\r\n                          {\r\n                            this.state.manufacturers.map( cat => {\r\n                              return <option key={cat.m_id} value={cat.m_name}>{cat.m_name}</option>\r\n                            })\r\n                          }\r\n\r\n                        </Form.Control> */}\r\n                        <SelectSearch options={this.state.manufacturers} value={this.state.manufacturer.name} \r\n                          onChange={(values, state, props) => {this.setState({[props.name]:{id: values.id, name: values.name}})}} \r\n                          name=\"manufacturer\" placeholder=\"Manufacturer\" \r\n                        />\r\n                        {/* <Form.Text className=\"text-muted\">\r\n                          We'll never share your email with anyone else.\r\n                        </Form.Text> */}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  \r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"brand\">\r\n                        <Form.Label>Brand</Form.Label>\r\n                        {/* <Form.Control name=\"brand\" as=\"select\" onChange={this.handleChange}>\r\n                          {\r\n                            this.state.brands.map( cat => {\r\n                              return <option key={cat.b_id} value={cat.b_name}>{cat.b_name}</option>\r\n                            })\r\n                          }\r\n\r\n                        </Form.Control> */}\r\n                        <SelectSearch options={this.state.brands} value={this.state.brand.name} \r\n                          onChange={(values, state, props) => {this.setState({[props.name]:{id: values.id, name: values.name}})}} \r\n                          name=\"brand\" placeholder=\"Brand\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"dosageForm\" onChange={this.handleChange}>\r\n                        <Form.Label>Dosage Form</Form.Label>\r\n                        {/* <Form.Control name=\"dosageForm\" as=\"select\">\r\n                          {\r\n                            this.state.dosageForms.map( cat => {\r\n                              return <option key={cat.d_id} value={cat.d_name}>{cat.d_name}</option>\r\n                            })\r\n                          }\r\n\r\n                        </Form.Control> */}\r\n                        <SelectSearch options={this.state.dosageForms} value={this.state.dosage.name} \r\n                          onChange={(values, state, props) => {this.setState({[props.name]:{id: values.id, name: values.name}})}} \r\n                          name=\"dosage\" placeholder=\"Dosage Form\" \r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"packaging\" onChange={this.handleChange}>\r\n                        <Form.Label>Packaging</Form.Label>\r\n                        <Form.Control style={{height: '75%'}} name=\"packaging\" type=\"text\" value={this.state.packaging} onChange={this.handleChange}/>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"price\" onChange={this.handleChange}>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control style={{height: '75%'}} name=\"price\" type=\"number\" value={this.state.price} onChange={this.handleChange}/>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"sku_productCode\" onChange={this.handleChange}>\r\n                        <Form.Label>Product Code</Form.Label>\r\n                        <Form.Control style={{height: '75%'}} name=\"sku_productCode\" type=\"text\" value={this.state.sku_productCode} onChange={this.handleChange}/>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Form.Group controlId=\"active\">\r\n                    <Form.Check type=\"checkbox\" label=\"Active\" data-toggle=\"toggle\"/>\r\n                  </Form.Group>\r\n                  \r\n                  <Form.Group>\r\n                    <Form.Label>Drugs</Form.Label>\r\n                    {this.createUI()}        \r\n\r\n                  </Form.Group>\r\n                  <Button variant='success' value='Add More' onClick={this.addClick.bind(this)}>Add More</Button>\r\n\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n                </Card.Body>\r\n                \r\n              </Card>\r\n            </Col>\r\n\r\n            \r\n          </Row>\r\n        </Container>\r\n        <Container>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card style={{padding: '20px'}}>\r\n                <table id=\"brandDataTable\" className=\"display\" width=\"100%\" ref = { el => this.el=el }>\r\n\r\n                </table>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Medicine;\r\n"]},"metadata":{},"sourceType":"module"}