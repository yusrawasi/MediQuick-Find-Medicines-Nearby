{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Seventh Semester\\\\FYP\\\\MediQuick-Find-Medicines-Nearby\\\\next\\\\pages\\\\admin\\\\medicine.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport axios from 'axios';\nimport SelectSearch from 'react-select-search';\nimport \"../../css/style.css\";\n\nvar $ = require('jquery');\n\n$.DataTable = require('datatables.net');\n\nvar Medicine =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Medicine, _Component);\n\n  function Medicine(props) {\n    var _this;\n\n    _classCallCheck(this, Medicine);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Medicine).call(this, props));\n    _this.state = {\n      id: 0,\n      brand: '',\n      dosage: '',\n      manufacturer: '',\n      packaging: '',\n      price: 0,\n      sku_productCode: 'MEDXXX',\n      brands: [],\n      dosageForms: [],\n      manufacturers: [],\n      generics: [],\n      genericsSelected: [{\n        id: 1,\n        name: \"\",\n        value: \"\",\n        strength: \"\"\n      }],\n      medicines: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Medicine, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"../api/manufacturer\").then(function (response) {\n        _this2.setState({\n          manufacturers: response.data.map(function (item) {\n            return {\n              id: item.m_id,\n              name: item.m_name,\n              value: item.m_name\n            };\n          }),\n          manufacturer: response.data[0].m_name\n        });\n      });\n      axios.get(\"../api/brand\").then(function (response) {\n        _this2.setState({\n          brands: response.data.map(function (item) {\n            return {\n              id: item.b_id,\n              name: item.b_name,\n              value: item.b_name\n            };\n          }),\n          brand: response.data[0].b_name\n        });\n      });\n      axios.get(\"../api/dosage\").then(function (response) {\n        _this2.setState({\n          dosageForms: response.data.map(function (item) {\n            return {\n              id: item.d_id,\n              name: item.d_name,\n              value: item.d_name\n            };\n          }),\n          dosage: response.data[0].d_name\n        });\n      });\n      axios.get(\"../api/generic\").then(function (response) {\n        var element = response.data[0];\n\n        _this2.setState({\n          generics: response.data.map(function (item) {\n            return {\n              id: item.g_id,\n              name: item.g_name,\n              value: item.g_name\n            };\n          }),\n          genericsSelected: [{\n            id: element.g_id,\n            name: element.g_name,\n            value: element.g_name,\n            strength: ''\n          }]\n        });\n      });\n      axios.get('../api/medicine').then(function (response) {\n        _this2.setState({\n          medicines: response.data\n        });\n\n        console.log(response);\n        _this2.$el = $(_this2.el);\n\n        _this2.$el.DataTable({\n          data: _this2.state.medicines,\n          \"columnDefs\": [{// The `data` parameter refers to the data for the cell (defined by the\n            // `data` option, which defaults to the column being worked with, in\n            // this case `data: 0`.\n            // \"render\": function ( data, type, row ) {\n            //     var html = $.parseHTML(data);\n            //     console.log(html);\n            //     return html[0].data;\n            // },\n            // \"targets\": [1]\n          }, // { \"visible\": true,  \"targets\": [ 3 ] }\n          {// The `data` parameter refers to the data for the cell (defined by the\n            // `data` option, which defaults to the column being worked with, in\n            // this case `data: 0`.\n            // \"render\": function ( data, type, row ) {\n            //     var html = $.parseHTML(data);\n            //     console.log(html);\n            //     return html[0].data;\n            // },\n            // \"targets\": [2]\n          }],\n          columns: [{\n            title: \"ID\",\n            data: 'med_id'\n          }, {\n            title: \"Name\",\n            data: 'brand_name'\n          }, {\n            title: \"Dosage Form\",\n            data: 'dosage_name'\n          }, {\n            title: \"Manufacturer\",\n            data: 'manufacturer_name'\n          }, {\n            mRender: function mRender(data, type, row) {\n              var drugs = row['generics'];\n              var drugList = drugs.map(function (drug) {\n                return '<span>' + drug.drugname + ': ' + drug.strength + '</span>';\n              });\n              return '<p>' + drugList + '</p>';\n            }\n          }, {\n            title: \"Packaging\",\n            data: 'packaging'\n          }, {\n            mRender: function mRender(data, type, row) {\n              return '<a href=\"#\" class=\"table-edit\" data-id=\"' + row[0] + '\">EDIT</a>';\n            }\n          }]\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var target = e.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var data = {\n        b_id: this.state.brand.id,\n        m_id: this.state.manufacturer.id,\n        d_id: this.state.dosage.id,\n        packaging: this.state.packaging,\n        med_generics: this.state.genericsSelected,\n        strips_per_packet: '0',\n        sku_productCode: this.state.sku_productCode,\n        price: this.state.price\n      };\n      console.log(data);\n      axios.post('../api/medicine', data).then(function (res) {\n        return console.log(res);\n      });\n    }\n  }, {\n    key: \"addClick\",\n    value: function addClick() {\n      this.setState(function (prevState) {\n        return {\n          genericsSelected: [].concat(_toConsumableArray(prevState.genericsSelected), [{\n            id: 1,\n            name: \"\",\n            strength: \"\",\n            value: \"\"\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"removeClick\",\n    value: function removeClick(i) {\n      var values = _toConsumableArray(this.state.genericsSelected);\n\n      values.splice(i, 1);\n      this.setState({\n        genericsSelected: values\n      });\n    }\n  }, {\n    key: \"createUI\",\n    value: function createUI() {\n      var _this3 = this;\n\n      return this.state.genericsSelected.map(function (el, i) {\n        return __jsx(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, __jsx(Form.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, __jsx(Col, {\n          md: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, __jsx(SelectSearch, {\n          options: _this3.state.generics,\n          value: el.name,\n          onChange: function onChange(values, state, props) {\n            _this3.handleGenericChangeSelectReact.bind(_this3, i, values, props)();\n          },\n          name: \"name\",\n          placeholder: \"Drug Name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        })), __jsx(Col, {\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, __jsx(Form.Control, {\n          style: {\n            height: '75%'\n          },\n          name: \"strength\",\n          type: \"text\",\n          value: el.strength,\n          onChange: _this3.handleGenericChange.bind(_this3, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        })), __jsx(Col, {\n          md: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, __jsx(Button, {\n          variant: \"danger\",\n          style: {\n            height: '75%'\n          },\n          onClick: _this3.removeClick.bind(_this3, i),\n          block: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, \"Remove\"))));\n      });\n    }\n  }, {\n    key: \"handleGenericChange\",\n    value: function handleGenericChange(i, event) {\n      var values = _toConsumableArray(this.state.genericsSelected);\n\n      values[i][event.target.name] = event.target.value;\n      this.setState({\n        genericsSelected: values\n      });\n    }\n  }, {\n    key: \"handleGenericChangeSelectReact\",\n    value: function handleGenericChangeSelectReact(i, values, props) {\n      var data = _toConsumableArray(this.state.genericsSelected);\n\n      data[i][props.name] = values.name;\n      data[i]['value'] = values.name;\n      data[i]['id'] = values.id;\n      this.setState({\n        genericsSelected: data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n        integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n        crossOrigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, __jsx(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, __jsx(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, __jsx(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, __jsx(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, __jsx(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, __jsx(Form.Group, {\n        controlId: \"manufacturer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, __jsx(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Manufacturer\"), __jsx(SelectSearch, {\n        options: this.state.manufacturers,\n        value: this.state.manufacturer.name,\n        onChange: function onChange(values, state, props) {\n          _this4.setState(_defineProperty({}, props.name, {\n            id: values.id,\n            name: values.name\n          }));\n        },\n        name: \"manufacturer\",\n        placeholder: \"Manufacturer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))), __jsx(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, __jsx(Form.Group, {\n        controlId: \"brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, __jsx(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Brand\"), __jsx(SelectSearch, {\n        options: this.state.brands,\n        value: this.state.brand.name,\n        onChange: function onChange(values, state, props) {\n          _this4.setState(_defineProperty({}, props.name, {\n            id: values.id,\n            name: values.name\n          }));\n        },\n        name: \"brand\",\n        placeholder: \"Brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }))), __jsx(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, __jsx(Form.Group, {\n        controlId: \"dosageForm\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, __jsx(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Dosage Form\"), __jsx(SelectSearch, {\n        options: this.state.dosageForms,\n        value: this.state.dosage.name,\n        onChange: function onChange(values, state, props) {\n          _this4.setState(_defineProperty({}, props.name, {\n            id: values.id,\n            name: values.name\n          }));\n        },\n        name: \"dosage\",\n        placeholder: \"Dosage Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }))), __jsx(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, __jsx(Form.Group, {\n        controlId: \"packaging\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, __jsx(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Packaging\"), __jsx(Form.Control, {\n        style: {\n          height: '75%'\n        },\n        name: \"packaging\",\n        type: \"text\",\n        value: this.state.packaging,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }))), __jsx(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, __jsx(Form.Group, {\n        controlId: \"price\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, __jsx(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Price\"), __jsx(Form.Control, {\n        style: {\n          height: '75%'\n        },\n        name: \"price\",\n        type: \"number\",\n        value: this.state.price,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }))), __jsx(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, __jsx(Form.Group, {\n        controlId: \"sku_productCode\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, __jsx(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Product Code\"), __jsx(Form.Control, {\n        style: {\n          height: '75%'\n        },\n        name: \"sku_productCode\",\n        type: \"text\",\n        value: this.state.sku_productCode,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      })))), __jsx(Form.Group, {\n        controlId: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, __jsx(Form.Check, {\n        type: \"checkbox\",\n        label: \"Active\",\n        \"data-toggle\": \"toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      })), __jsx(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, __jsx(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Drugs\"), this.createUI()), __jsx(Button, {\n        variant: \"success\",\n        value: \"Add More\",\n        onClick: this.addClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Add More\"), __jsx(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Submit\"))))))), __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, __jsx(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, __jsx(Card, {\n        style: {\n          padding: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, __jsx(\"table\", {\n        id: \"brandDataTable\",\n        className: \"display\",\n        width: \"100%\",\n        ref: function ref(el) {\n          return _this4.el = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Medicine;\n}(Component);\n\nexport default Medicine;","map":{"version":3,"sources":["D:/Seventh Semester/FYP/MediQuick-Find-Medicines-Nearby/next/pages/admin/medicine.js"],"names":["React","Component","Container","Row","Col","Card","Form","Button","axios","SelectSearch","$","require","DataTable","Medicine","props","state","id","brand","dosage","manufacturer","packaging","price","sku_productCode","brands","dosageForms","manufacturers","generics","genericsSelected","name","value","strength","medicines","handleChange","bind","handleSubmit","get","then","response","setState","data","map","item","m_id","m_name","b_id","b_name","d_id","d_name","element","g_id","g_name","console","log","$el","el","columns","title","mRender","type","row","drugs","drugList","drug","drugname","e","target","checked","preventDefault","med_generics","strips_per_packet","post","res","prevState","i","values","splice","handleGenericChangeSelectReact","height","handleGenericChange","removeClick","event","createUI","addClick","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport SelectSearch from 'react-select-search';\r\nimport \"../../css/style.css\";\r\n\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nclass Medicine extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      id: 0,\r\n      brand: '',\r\n      dosage: '',\r\n      manufacturer: '',\r\n      packaging: '',\r\n      price: 0,\r\n      sku_productCode: 'MEDXXX',\r\n\r\n      brands: [],\r\n      dosageForms: [],\r\n      manufacturers: [],\r\n      generics: [],\r\n\r\n      genericsSelected: [{id: 1, name: \"\", value:\"\", strength: \"\"}],\r\n\r\n      medicines: []\r\n\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    axios.get(`../api/manufacturer`).then(response => {\r\n      this.setState({\r\n          manufacturers: response.data.map((item)=>({id: item.m_id, name: item.m_name, value: item.m_name})),\r\n          manufacturer: response.data[0].m_name\r\n      });\r\n  });\r\n\r\n    axios.get(`../api/brand`).then(response => {\r\n        this.setState({\r\n            brands: response.data.map((item)=>({id: item.b_id, name: item.b_name, value: item.b_name})),\r\n            brand: response.data[0].b_name\r\n        });\r\n    });\r\n\r\n    axios.get(`../api/dosage`).then(response => {\r\n        this.setState({\r\n            dosageForms: response.data.map((item)=>({id: item.d_id, name: item.d_name, value: item.d_name})),\r\n            dosage: response.data[0].d_name\r\n        });\r\n    });\r\n\r\n    axios.get(`../api/generic`).then(response => {\r\n        const element = response.data[0];\r\n        this.setState({\r\n            generics: response.data.map((item)=>({id: item.g_id, name: item.g_name, value: item.g_name})),\r\n            genericsSelected: [{id: element.g_id, name: element.g_name, value: element.g_name, strength: ''}]\r\n        });\r\n    });\r\n\r\n    axios.get('../api/medicine').then(response => {\r\n      this.setState({\r\n        medicines: response.data\r\n      });\r\n      console.log(response);\r\n      this.$el = $(this.el);\r\n    this.$el.DataTable(\r\n      {\r\n        data: this.state.medicines,\r\n        \"columnDefs\": [\r\n          {\r\n              // The `data` parameter refers to the data for the cell (defined by the\r\n              // `data` option, which defaults to the column being worked with, in\r\n              // this case `data: 0`.\r\n              // \"render\": function ( data, type, row ) {\r\n              //     var html = $.parseHTML(data);\r\n              //     console.log(html);\r\n              //     return html[0].data;\r\n              // },\r\n              // \"targets\": [1]\r\n          },\r\n          // { \"visible\": true,  \"targets\": [ 3 ] }\r\n          {\r\n            // The `data` parameter refers to the data for the cell (defined by the\r\n            // `data` option, which defaults to the column being worked with, in\r\n            // this case `data: 0`.\r\n            // \"render\": function ( data, type, row ) {\r\n            //     var html = $.parseHTML(data);\r\n            //     console.log(html);\r\n            //     return html[0].data;\r\n            // },\r\n            // \"targets\": [2]\r\n        }\r\n      ],\r\n        columns: [\r\n            { title: \"ID\", data: 'med_id' },\r\n            { title: \"Name\", data: 'brand_name' },\r\n            { title: \"Dosage Form\", data: 'dosage_name' },\r\n            { title: \"Manufacturer\", data: 'manufacturer_name' },\r\n\r\n            {\r\n              mRender: function (data, type, row) {\r\n                const drugs = row['generics'];\r\n                let drugList = drugs.map((drug)=>{\r\n                  return '<span>'+ drug.drugname +': ' + drug.strength + '</span>';\r\n                });\r\n                  return '<p>' + drugList + '</p>';\r\n              }\r\n            },\r\n            { title: \"Packaging\", data: 'packaging' },\r\n            {\r\n              mRender: function (data, type, row) {\r\n                  return '<a href=\"#\" class=\"table-edit\" data-id=\"' + row[0] + '\">EDIT</a>'\r\n              }\r\n            }\r\n           \r\n        ]\r\n    }\r\n    )\r\n    });\r\n    \r\n  }\r\n\r\n  handleChange(e){\r\n      const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name \r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n  }\r\n\r\n\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      b_id: this.state.brand.id,\r\n      m_id: this.state.manufacturer.id,\r\n      d_id: this.state.dosage.id,\r\n      packaging: this.state.packaging,\r\n      med_generics: this.state.genericsSelected,\r\n      strips_per_packet: '0',\r\n      sku_productCode: this.state.sku_productCode,\r\n      price: this.state.price\r\n    }\r\n\r\n    console.log(data);\r\n\r\n    axios.post('../api/medicine', data)\r\n    .then(res => console.log(res));\r\n  }\r\n\r\n  addClick(){\r\n    this.setState(prevState => ({ genericsSelected: [...prevState.genericsSelected, {id: 1, name: \"\", strength: \"\", value: \"\"}]}))\r\n  }\r\n  \r\n  removeClick(i){\r\n     let values = [...this.state.genericsSelected];\r\n     values.splice(i,1);\r\n     this.setState({ genericsSelected: values });\r\n  }\r\n\r\n  createUI(){\r\n    return this.state.genericsSelected.map((el, i) => \r\n        \r\n        <div key={i}>\r\n         {/* <input name=\"g_name\" type=\"text\" value={el.g_name||''} onChange={this.handleGenericChange.bind(this, i)} />\r\n         <input name=\"strength\" type=\"text\" value={el.strength||''} onChange={this.handleGenericChange.bind(this, i)} />\r\n         <input type='button' value='remove' onClick={this.removeClick.bind(this, i)}/> */}\r\n\r\n          <Form.Row>\r\n            \r\n            <Col md={6}>\r\n              {/* <Form.Control name=\"g_name\" as=\"select\" value={el.name} onChange={this.handleGenericChange.bind(this, i)}>\r\n                {\r\n                  this.state.generics.map( cat => {\r\n                    return <option key={cat.g_id} value={cat.g_name}>{cat.g_name}</option>\r\n                  })\r\n                }\r\n              </Form.Control>\r\n              <SelectSearch options={this.state.generics} value={el.name} \r\n                name=\"generic\" placeholder=\"Drug Name\" \r\n              /> */}\r\n              <SelectSearch options={this.state.generics} value={el.name} \r\n                onChange={(values, state, props) => {this.handleGenericChangeSelectReact.bind(this, i, values, props)()}} \r\n                name=\"name\" placeholder=\"Drug Name\" \r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Control style={{height: '75%'}} name=\"strength\" type=\"text\" value={el.strength} onChange={this.handleGenericChange.bind(this, i)}/>\r\n            </Col>\r\n            <Col md={2}>\r\n              <Button variant=\"danger\" style={{height: '75%'}} onClick={this.removeClick.bind(this, i)} block>Remove</Button>\r\n            </Col>\r\n          </Form.Row>\r\n        </div>          \r\n    )\r\n  }\r\n\r\n  handleGenericChange(i, event) {\r\n    let values = [...this.state.genericsSelected];\r\n    values[i][event.target.name] = event.target.value;\r\n    this.setState({ genericsSelected: values });\r\n  }\r\n\r\n  handleGenericChangeSelectReact(i, values, props) {\r\n    let data = [...this.state.genericsSelected];\r\n    data[i][props.name] = values.name;\r\n    data[i]['value'] = values.name;\r\n    data[i]['id'] = values.id;\r\n    this.setState({ genericsSelected: data });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css\"></link>\r\n\r\n        <Container>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card>\r\n                <Card.Body>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <Row>\r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"manufacturer\">\r\n                        <Form.Label>Manufacturer</Form.Label>\r\n                        {/* <Form.Control name=\"manufacturer\" as=\"select\" onChange={this.handleChange}>\r\n                          {\r\n                            this.state.manufacturers.map( cat => {\r\n                              return <option key={cat.m_id} value={cat.m_name}>{cat.m_name}</option>\r\n                            })\r\n                          }\r\n\r\n                        </Form.Control> */}\r\n                        <SelectSearch options={this.state.manufacturers} value={this.state.manufacturer.name} \r\n                          onChange={(values, state, props) => {this.setState({[props.name]:{id: values.id, name: values.name}})}} \r\n                          name=\"manufacturer\" placeholder=\"Manufacturer\" \r\n                        />\r\n                        {/* <Form.Text className=\"text-muted\">\r\n                          We'll never share your email with anyone else.\r\n                        </Form.Text> */}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  \r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"brand\">\r\n                        <Form.Label>Brand</Form.Label>\r\n                        {/* <Form.Control name=\"brand\" as=\"select\" onChange={this.handleChange}>\r\n                          {\r\n                            this.state.brands.map( cat => {\r\n                              return <option key={cat.b_id} value={cat.b_name}>{cat.b_name}</option>\r\n                            })\r\n                          }\r\n\r\n                        </Form.Control> */}\r\n                        <SelectSearch options={this.state.brands} value={this.state.brand.name} \r\n                          onChange={(values, state, props) => {this.setState({[props.name]:{id: values.id, name: values.name}})}} \r\n                          name=\"brand\" placeholder=\"Brand\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"dosageForm\" onChange={this.handleChange}>\r\n                        <Form.Label>Dosage Form</Form.Label>\r\n                        {/* <Form.Control name=\"dosageForm\" as=\"select\">\r\n                          {\r\n                            this.state.dosageForms.map( cat => {\r\n                              return <option key={cat.d_id} value={cat.d_name}>{cat.d_name}</option>\r\n                            })\r\n                          }\r\n\r\n                        </Form.Control> */}\r\n                        <SelectSearch options={this.state.dosageForms} value={this.state.dosage.name} \r\n                          onChange={(values, state, props) => {this.setState({[props.name]:{id: values.id, name: values.name}})}} \r\n                          name=\"dosage\" placeholder=\"Dosage Form\" \r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"packaging\" onChange={this.handleChange}>\r\n                        <Form.Label>Packaging</Form.Label>\r\n                        <Form.Control style={{height: '75%'}} name=\"packaging\" type=\"text\" value={this.state.packaging} onChange={this.handleChange}/>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"price\" onChange={this.handleChange}>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control style={{height: '75%'}} name=\"price\" type=\"number\" value={this.state.price} onChange={this.handleChange}/>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <Form.Group controlId=\"sku_productCode\" onChange={this.handleChange}>\r\n                        <Form.Label>Product Code</Form.Label>\r\n                        <Form.Control style={{height: '75%'}} name=\"sku_productCode\" type=\"text\" value={this.state.sku_productCode} onChange={this.handleChange}/>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Form.Group controlId=\"active\">\r\n                    <Form.Check type=\"checkbox\" label=\"Active\" data-toggle=\"toggle\"/>\r\n                  </Form.Group>\r\n                  \r\n                  <Form.Group>\r\n                    <Form.Label>Drugs</Form.Label>\r\n                    {this.createUI()}        \r\n\r\n                  </Form.Group>\r\n                  <Button variant='success' value='Add More' onClick={this.addClick.bind(this)}>Add More</Button>\r\n\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n                </Card.Body>\r\n                \r\n              </Card>\r\n            </Col>\r\n\r\n            \r\n          </Row>\r\n        </Container>\r\n        <Container>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card style={{padding: '20px'}}>\r\n                <table id=\"brandDataTable\" className=\"display\" width=\"100%\" ref = { el => this.el=el }>\r\n\r\n                </table>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Medicine;\r\n"]},"metadata":{},"sourceType":"module"}